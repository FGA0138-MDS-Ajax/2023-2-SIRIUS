// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       Int     @id @default(autoincrement())
    email    String  @unique
    name     String?
    password String
}

model Torneio {
    id           String                 @id @unique @default(uuid())
    datatorneio  DateTime               @default(now())
    participante ParticipantesTorneio[]
    rodada       Rodadas[]
}

model ParticipantesTorneio {
    id                  String          @id @unique @default(uuid())
    torneio             Torneio         @relation(fields: [torneioId], references: [id])
    torneioId           String          @unique
    participantetorneio Participantes[]
}

model Rodadas {
    id        String   @id @default(uuid())
    torneio   Torneio  @relation(fields: [torneioId], references: [id])
    torneioId String   @unique
    grupo     Grupos[]
}

model Grupos {
    id                String              @id @default(uuid())
    rodada            Rodadas             @relation(fields: [idRodada], references: [id])
    idRodada          String
    participantegrupo ParticipanteGrupo[]
    participante      Participantes[]
}

model ParticipanteGrupo {
    id           String          @id @unique @default(uuid())
    grupo        Grupos          @relation(fields: [grupoId], references: [id])
    grupoId      String          @unique
    participante Participantes[]
}

model Participantes {
    id                    String               @id @default(uuid())
    teamName              String
    inGameName            String
    checkedInAt           String
    idDiscord             String
    winner                Boolean              @default(false)
    email                 String
    grupo                 Grupos               @relation(fields: [grupoId], references: [id])
    grupoId               String               @unique
    participantetorneio   ParticipantesTorneio @relation(fields: [participantetorneioId], references: [id])
    participantetorneioId String
    participantegrupo     ParticipanteGrupo    @relation(fields: [participantegrupoId], references: [id])
    participantegrupoId   String
}
